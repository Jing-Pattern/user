// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package authservice

import (
	"context"

	"github.com/Jing-Pattern/user/rpc/pb/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Auth             = pb.Auth
	LoginRequest     = pb.LoginRequest
	LoginResponse    = pb.LoginResponse
	RegisterRequest  = pb.RegisterRequest
	RegisterResponse = pb.RegisterResponse

	AuthService interface {
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
		Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	}

	defaultAuthService struct {
		cli zrpc.Client
	}
)

func NewAuthService(cli zrpc.Client) AuthService {
	return &defaultAuthService{
		cli: cli,
	}
}

func (m *defaultAuthService) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := pb.NewAuthServiceClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultAuthService) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	client := pb.NewAuthServiceClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}
