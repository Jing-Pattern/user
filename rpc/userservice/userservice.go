// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userservice

import (
	"context"

	"github.com/Jing-Pattern/user/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateUserReq = pb.CreateUserReq
	ExistUser     = pb.ExistUser
	UserInfo      = pb.UserInfo
	UserReq       = pb.UserReq
	UserResp      = pb.UserResp

	UserService interface {
		GetUserInfo(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserInfo, error)
		CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*UserResp, error)
		UpdateUser(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*UserResp, error)
		DeleteUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserResp, error)
		FindUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*ExistUser, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) GetUserInfo(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserInfo, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

func (m *defaultUserService) CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*UserResp, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.CreateUser(ctx, in, opts...)
}

func (m *defaultUserService) UpdateUser(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*UserResp, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.UpdateUser(ctx, in, opts...)
}

func (m *defaultUserService) DeleteUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserResp, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.DeleteUser(ctx, in, opts...)
}

func (m *defaultUserService) FindUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*ExistUser, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.FindUser(ctx, in, opts...)
}
